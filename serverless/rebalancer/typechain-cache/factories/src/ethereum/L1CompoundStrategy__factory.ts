/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  L1CompoundStrategy,
  L1CompoundStrategyInterface,
} from "../../../src/ethereum/L1CompoundStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BaseVault",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "contract ICToken",
        name: "_cToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "COMP",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "COMPTROLLER",
    outputs: [
      {
        internalType: "contract IComptroller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTER",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STRATEGIST",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cToken",
    outputs: [
      {
        internalType: "contract ICToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAssetsFromReward",
        type: "uint256",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "divest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLockedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract BaseVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620021ee380380620021ee833981016040819052620000349162000349565b81806001600160a01b03166080816001600160a01b031681525050806001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200008e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b4919062000388565b6001600160a01b0390811660a081905290831660c0819052620000e792506000196200020d602090811b62000e3f17901c565b6200012a73c00e94cb662c3520282e6f5717214004a7f26888737a250d5630b4cf539739df2c5dacb4c659f2488d6000196200020d602090811b62000e3f17901c565b6200019f6000801b6080516001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000173573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000199919062000388565b6200028f565b620002057fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c6080516001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000173573d6000803e3d6000fd5b5050620003af565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080620002895760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff166200032c576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002eb3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6001600160a01b03811681146200034657600080fd5b50565b600080604083850312156200035d57600080fd5b82516200036a8162000330565b60208401519092506200037d8162000330565b809150509250929050565b6000602082840312156200039b57600080fd5b8151620003a88162000330565b9392505050565b60805160a05160c051611db46200043a600039600081816102c50152818161073501528181610b73015281816110ba015281816113c7015261146b0152600081816102830152818161098c01528181610ae701528181610cf0015261151a0152600081816103c3015281816103e70152818161051201528181610d8a015261153c0152611db46000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80635f82c67e116100d85780639cfdede31161008c578063b71501bc11610066578063b71501bc14610390578063d547741f146103ab578063fbfa77cf146103be57600080fd5b80639cfdede314610346578063a217fddf1461036d578063ad5c46481461037557600080fd5b8063797bf343116100bd578063797bf343146102e75780638ca17995146102ef57806391d148541461030257600080fd5b80635f82c67e146102a557806369e527da146102c057600080fd5b80632f2ff15d1161012f578063357be44611610114578063357be4461461026357806336568abe1461026b57806338d52e0f1461027e57600080fd5b80632f2ff15d1461021057806332fe7b261461022357600080fd5b80630962ef79116101605780630962ef79146101b9578063248a9ca3146101cc5780632afcf480146101fd57600080fd5b806301681a621461017c57806301ffc9a714610191575b600080fd5b61018f61018a3660046118b6565b6103e5565b005b6101a461019f3660046118d3565b61064e565b60405190151581526020015b60405180910390f35b61018f6101c7366004611915565b6106e7565b6101ef6101da366004611915565b60009081526020819052604090206001015490565b6040519081526020016101b0565b61018f61020b366004611915565b610acd565b61018f61021e36600461192e565b610b18565b61023e737a250d5630b4cf539739df2c5dacb4c659f2488d81565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101b0565b6101ef610b42565b61018f61027936600461192e565b610c0c565b61023e7f000000000000000000000000000000000000000000000000000000000000000081565b61023e733d9819210a31b4961b30ef54be2aed79b9c9cd3b81565b61023e7f000000000000000000000000000000000000000000000000000000000000000081565b6101ef610cbf565b6101ef6102fd366004611915565b610d70565b6101a461031036600461192e565b60009182526020828152604080842073ffffffffffffffffffffffffffffffffffffffff93909316845291905290205460ff1690565b6101ef7fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c81565b6101ef600081565b61023e73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b61023e73c00e94cb662c3520282e6f5717214004a7f2688881565b61018f6103b936600461192e565b610e1a565b61023e7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610450573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610474919061195e565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f42533a206f6e6c7920676f7665726e616e63650000000000000000000000000060448201526064015b60405180910390fd5b61064b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa15801561057b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059f919061195e565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8416906370a0823190602401602060405180830381865afa158015610609573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062d919061197b565b73ffffffffffffffffffffffffffffffffffffffff84169190610efe565b50565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806106e157507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c61071181610fb7565b604080516001808252818301909252600091602080830190803683370190505090507f000000000000000000000000000000000000000000000000000000000000000081600081518110610767576107676119c3565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101526040517f1c3db2e0000000000000000000000000000000000000000000000000000000008152733d9819210a31b4961b30ef54be2aed79b9c9cd3b90631c3db2e0906107de90309085906004016119f2565b600060405180830381600087803b1580156107f857600080fd5b505af115801561080c573d6000803e3d6000fd5b50506040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000925073c00e94cb662c3520282e6f5717214004a7f2688891506370a0823190602401602060405180830381865afa15801561087b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089f919061197b565b60408051600380825260808201909252919250600091906020820160608036833701905050905073c00e94cb662c3520282e6f5717214004a7f26888816000815181106108ee576108ee6119c3565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610950576109506119c3565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507f0000000000000000000000000000000000000000000000000000000000000000816002815181106109be576109be6119c3565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050662386f26fc10000821115610ac6576040517f38ed1739000000000000000000000000000000000000000000000000000000008152737a250d5630b4cf539739df2c5dacb4c659f2488d906338ed173990610a5f9085908990869030904290600401611a5a565b6000604051808303816000875af1158015610a7e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610ac49190810190611ae5565b505b5050505050565b610b0f73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016333084610fc1565b61064b81611080565b600082815260208190526040902060010154610b3381610fb7565b610b3d83836111a3565b505050565b6040517f3af9e6690000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690633af9e669906024016020604051808303816000875af1158015610bd1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf5919061197b565b610bfd610cbf565b610c079190611bf0565b905090565b73ffffffffffffffffffffffffffffffffffffffff81163314610cb1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c6600000000000000000000000000000000006064820152608401610504565b610cbb8282611293565b5050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa158015610d4c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c07919061197b565b60003373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e11576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f42533a206f6e6c79207661756c740000000000000000000000000000000000006044820152606401610504565b6106e18261134a565b600082815260208190526040902060010154610e3581610fb7565b610b3d8383611293565b60006040517f095ea7b3000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610ef8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c45440000000000000000000000000000000000006044820152606401610504565b50505050565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610ef8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610504565b61064b8133611569565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610ac6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610504565b8060000361108b5750565b6040517fa0712d68000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a0712d68906024016020604051808303816000875af1158015611118573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113c919061197b565b1561064b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f436f6d7053747261743a206d696e74206661696c6564000000000000000000006044820152606401610504565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610cbb5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff85168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556112353390565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff1615610cbb5760008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b600080611355610cbf565b90506000838210156113705761136b8285611c03565b611373565b60005b905080156114f0576040517f3af9e66900000000000000000000000000000000000000000000000000000000815230600482015260009061143990839073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690633af9e669906024016020604051808303816000875af1158015611410573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611434919061197b565b611639565b6040517f852a12e3000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063852a12e3906024016020604051808303816000875af11580156114c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ed919061197b565b50505b60006114fe85611434610cbf565b905061156173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f000000000000000000000000000000000000000000000000000000000000000083610efe565b949350505050565b60008281526020818152604080832073ffffffffffffffffffffffffffffffffffffffff8516845290915290205460ff16610cbb576115bf8173ffffffffffffffffffffffffffffffffffffffff166014611651565b6115ca836020611651565b6040516020016115db929190611c3a565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a000000000000000000000000000000000000000000000000000000000825261050491600401611cbb565b6000818310611648578161164a565b825b9392505050565b60606000611660836002611d0c565b61166b906002611bf0565b67ffffffffffffffff81111561168357611683611994565b6040519080825280601f01601f1916602001820160405280156116ad576020820181803683370190505b5090507f3000000000000000000000000000000000000000000000000000000000000000816000815181106116e4576116e46119c3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f780000000000000000000000000000000000000000000000000000000000000081600181518110611747576117476119c3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506000611783846002611d0c565b61178e906001611bf0565b90505b600181111561182b577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106117cf576117cf6119c3565b1a60f81b8282815181106117e5576117e56119c3565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361182481611d49565b9050611791565b50831561164a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610504565b73ffffffffffffffffffffffffffffffffffffffff8116811461064b57600080fd5b6000602082840312156118c857600080fd5b813561164a81611894565b6000602082840312156118e557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461164a57600080fd5b60006020828403121561192757600080fd5b5035919050565b6000806040838503121561194157600080fd5b82359150602083013561195381611894565b809150509250929050565b60006020828403121561197057600080fd5b815161164a81611894565b60006020828403121561198d57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006040820173ffffffffffffffffffffffffffffffffffffffff80861684526020604081860152828651808552606087019150828801945060005b81811015611a4c578551851683529483019491830191600101611a2e565b509098975050505050505050565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015611ab757845173ffffffffffffffffffffffffffffffffffffffff1683529383019391830191600101611a85565b505073ffffffffffffffffffffffffffffffffffffffff969096166060850152505050608001529392505050565b60006020808385031215611af857600080fd5b825167ffffffffffffffff80821115611b1057600080fd5b818501915085601f830112611b2457600080fd5b815181811115611b3657611b36611994565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f83011681018181108582111715611b7957611b79611994565b604052918252848201925083810185019188831115611b9757600080fd5b938501935b82851015611bb557845184529385019392850192611b9c565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156106e1576106e1611bc1565b818103818111156106e1576106e1611bc1565b60005b83811015611c31578181015183820152602001611c19565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611c72816017850160208801611c16565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611caf816028840160208801611c16565b01602801949350505050565b6020815260008251806020840152611cda816040850160208701611c16565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d4457611d44611bc1565b500290565b600081611d5857611d58611bc1565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220887084ed4370c3405d8d33142a5d47cdc3ba87403a73c348988740212fcb7da064736f6c63430008100033";

type L1CompoundStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L1CompoundStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L1CompoundStrategy__factory extends ContractFactory {
  constructor(...args: L1CompoundStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    _cToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L1CompoundStrategy> {
    return super.deploy(
      _vault,
      _cToken,
      overrides || {}
    ) as Promise<L1CompoundStrategy>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    _cToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, _cToken, overrides || {});
  }
  override attach(address: string): L1CompoundStrategy {
    return super.attach(address) as L1CompoundStrategy;
  }
  override connect(signer: Signer): L1CompoundStrategy__factory {
    return super.connect(signer) as L1CompoundStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L1CompoundStrategyInterface {
    return new utils.Interface(_abi) as L1CompoundStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L1CompoundStrategy {
    return new Contract(address, _abi, signerOrProvider) as L1CompoundStrategy;
  }
}
