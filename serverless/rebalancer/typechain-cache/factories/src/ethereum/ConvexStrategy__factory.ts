/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ConvexStrategy,
  ConvexStrategyInterface,
} from "../../../src/ethereum/ConvexStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract BaseVault",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "contract ICurvePool",
        name: "_curvePool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_convexPid",
        type: "uint256",
      },
      {
        internalType: "contract IConvexBooster",
        name: "_convexBooster",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "ASSET_INDEX",
    outputs: [
      {
        internalType: "int128",
        name: "",
        type: "int128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CRV",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CVX",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_TOKEN_AMT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ROUTER",
    outputs: [
      {
        internalType: "contract IUniswapV2Router02",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STRATEGIST",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "balanceOfAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minAssetsFromCrv",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAssetsFromCvx",
        type: "uint256",
      },
    ],
    name: "claimAndSellRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "convexBooster",
    outputs: [
      {
        internalType: "contract IConvexBooster",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "convexPid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curveLpToken",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "curvePool",
    outputs: [
      {
        internalType: "contract ICurvePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "cvxRewarder",
    outputs: [
      {
        internalType: "contract IConvexRewards",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minLpTokens",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "divest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "invest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalLockedValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract BaseVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "withdrawAssets",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162002d8438038062002d84833981016040819052620000359162000454565b83806001600160a01b03166080816001600160a01b031681525050806001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200008f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000b59190620004c2565b6001600160a01b0390811660a05284811660c0526101008490528216610120819052604051631526fe2760e01b81526004810185905260009250631526fe279060240160c0604051808303816000875af115801562000118573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013e9190620004fa565b60608101516001600160a01b03908116610140528151811660e05260c05160a05192935062000180929091169060001962000318602090811b6200144e17901c565b620001ac6101205160001960e0516001600160a01b03166200031860201b6200144e179092919060201c565b620001ef73d533a949740bb3306d119cc777fa900ba034cd52737a250d5630b4cf539739df2c5dacb4c659f2488d60001962000318602090811b6200144e17901c565b62000232734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b737a250d5630b4cf539739df2c5dacb4c659f2488d60001962000318602090811b6200144e17901c565b620002a76000801b6080516001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200027b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002a19190620004c2565b6200039a565b6200030d7fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c6080516001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200027b573d6000803e3d6000fd5b5050505050620005b4565b600060405163095ea7b360e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080620003945760405162461bcd60e51b815260206004820152600e60248201526d1054141493d59157d1905253115160921b604482015260640160405180910390fd5b50505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000437576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620003f63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6001600160a01b03811681146200045157600080fd5b50565b600080600080608085870312156200046b57600080fd5b845162000478816200043b565b60208601519094506200048b816200043b565b604086015160608701519194509250620004a5816200043b565b939692955090935050565b8051620004bd816200043b565b919050565b600060208284031215620004d557600080fd5b8151620004e2816200043b565b9392505050565b80518015158114620004bd57600080fd5b600060c082840312156200050d57600080fd5b60405160c081016001600160401b03811182821017156200053e57634e487b7160e01b600052604160045260246000fd5b6040526200054c83620004b0565b81526200055c60208401620004b0565b60208201526200056f60408401620004b0565b60408201526200058260608401620004b0565b60608201526200059560808401620004b0565b6080820152620005a860a08401620004e9565b60a08201529392505050565b60805160a05160c05160e0516101005161012051610140516126c6620006be6000396000818161038d0152818161084a01528181610aff01528181610bad01528181611a880152611c1601526000818161029901526113d20152600081816103bc01526113a501526000818161034b015281816108e5015281816119d90152611d28015260008181610216015281816109a6015281816112fa01528181611b050152611cfe015260008181610311015281816107bd01528181610ce501528181610f440152818161112801528181611830015281816118b001526119280152600081816104da015281816104fe01528181610602015281816111ad01526118d201526126c66000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c8063759cb53b11610104578063945c9142116100a2578063d547741f11610071578063d547741f14610494578063dc07c8cb146104a7578063e2bbb158146104c2578063fbfa77cf146104d557600080fd5b8063945c9142146104375780639cfdede314610452578063a217fddf14610479578063d1033c071461048157600080fd5b806386993bef116100de57806386993bef146103b75780638ca17995146103de5780638d487bf6146103f157806391d148541461040057600080fd5b8063759cb53b1461036d578063759f3a8f14610388578063797bf343146103af57600080fd5b806332fe7b2611610171578063372500ab1161014b578063372500ab1461030457806338d52e0f1461030c57806349bd768b14610333578063646780df1461034657600080fd5b806332fe7b26146102ce578063357be446146102e957806336568abe146102f157600080fd5b8063248a9ca3116101ad578063248a9ca3146102505780632afcf480146102815780632cdacb50146102945780632f2ff15d146102bb57600080fd5b806301681a62146101d457806301ffc9a7146101e9578063218751b214610211575b600080fd5b6101e76101e2366004612193565b6104fc565b005b6101fc6101f73660046121b0565b610717565b60405190151581526020015b60405180910390f35b6102387f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610208565b61027361025e3660046121f2565b60009081526020819052604090206001015490565b604051908152602001610208565b6101e761028f3660046121f2565b6107b0565b6102387f000000000000000000000000000000000000000000000000000000000000000081565b6101e76102c936600461220b565b6107e5565b610238737a250d5630b4cf539739df2c5dacb4c659f2488d81565b61027361080f565b6101e76102ff36600461220b565b610a2d565b6101e7610ad3565b6102387f000000000000000000000000000000000000000000000000000000000000000081565b6101e761034136600461223b565b610b81565b6102387f000000000000000000000000000000000000000000000000000000000000000081565b610238734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b81565b6102387f000000000000000000000000000000000000000000000000000000000000000081565b6102736110f7565b6102737f000000000000000000000000000000000000000000000000000000000000000081565b6102736103ec3660046121f2565b6111a0565b61027367016345785d8a000081565b6101fc61040e36600461220b565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b61023873d533a949740bb3306d119cc777fa900ba034cd5281565b6102737fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c81565b610273600081565b6101e761048f3660046121f2565b61123d565b6101e76104a236600461220b565b611270565b6104af600181565b604051600f9190910b8152602001610208565b6101e76104d036600461223b565b611295565b6102387f000000000000000000000000000000000000000000000000000000000000000081565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa15801561055a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061057e919061225d565b6001600160a01b0316336001600160a01b0316146105fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f42533a206f6e6c7920676f7665726e616e63650000000000000000000000000060448201526064015b60405180910390fd5b6107147f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa15801561065e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610682919061225d565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b038416906370a0823190602401602060405180830381865afa1580156106df573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610703919061227a565b6001600160a01b038416919061150d565b50565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806107aa57507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6107146001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163330846115c6565b60008281526020819052604090206001015461080081611685565b61080a838361168f565b505050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009081906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024016020604051808303816000875af1158015610893573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108b7919061227a565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610934573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610958919061227a565b61096291906122c2565b6040517fcc2b27d700000000000000000000000000000000000000000000000000000000815260048101829052600160248201529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063cc2b27d790604401602060405180830381865afa1580156109ed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a11919061227a565b905080610a1c6110f7565b610a2691906122c2565b9250505090565b6001600160a01b0381163314610ac5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016105f4565b610acf828261174b565b5050565b7fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c610afd81611685565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610b5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610acf91906122d5565b7fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c610bab81611685565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633d18b9126040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610c0b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c2f91906122d5565b50604080516003808252608082019092526000916020820160608036833701905050905073d533a949740bb3306d119cc777fa900ba034cd5281600081518110610c7b57610c7b612326565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610cc357610cc3612326565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600281518110610d1757610d17612326565b6001600160a01b0392909216602092830291909101909101526040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009073d533a949740bb3306d119cc777fa900ba034cd52906370a0823190602401602060405180830381865afa158015610d9b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbf919061227a565b905067016345785d8a00008110610e8f576040517f38ed1739000000000000000000000000000000000000000000000000000000008152737a250d5630b4cf539739df2c5dacb4c659f2488d906338ed173990610e289084908990879030904290600401612355565b6000604051808303816000875af1158015610e47573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e8d91908101906123c6565b505b6040805160038082526080820190925260009160208201606080368337019050509050734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b81600081518110610eda57610eda612326565b60200260200101906001600160a01b031690816001600160a01b03168152505073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281600181518110610f2257610f22612326565b60200260200101906001600160a01b031690816001600160a01b0316815250507f000000000000000000000000000000000000000000000000000000000000000081600281518110610f7657610f76612326565b6001600160a01b0392909216602092830291909101909101526040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600090734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b906370a0823190602401602060405180830381865afa158015610ffa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101e919061227a565b905067016345785d8a000081106110ee576040517f38ed1739000000000000000000000000000000000000000000000000000000008152737a250d5630b4cf539739df2c5dacb4c659f2488d906338ed1739906110879084908a90879030904290600401612355565b6000604051808303816000875af11580156110a6573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526110ec91908101906123c6565b505b50505050505050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611177573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061119b919061227a565b905090565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614611234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f42533a206f6e6c79207661756c7400000000000000000000000000000000000060448201526064016105f4565b6107aa826117e8565b7fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c61126781611685565b610acf826118f7565b60008281526020819052604090206001015461128b81611685565b61080a838361174b565b7fb17d0a42cc710456bf9c3efb785dcd0cb93a0ac358113307b5c64b285b516b5c6112bf81611685565b604080518082018252600081526020810185905290517f0b4c7e4d0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690630b4c7e4d9061133990849087906004016124a2565b6020604051808303816000875af1158015611358573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061137c919061227a565b506040517f60759fce0000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006004820152600160248201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906360759fce906044016020604051808303816000875af1158015611423573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144791906122d5565b5050505050565b60006040517f095ea7b3000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064016105f4565b50505050565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016105f4565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080611447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c454400000000000000000000000060448201526064016105f4565b6107148133611e28565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610acf576000828152602081815260408083206001600160a01b0385168452909152902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556117073390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615610acf576000828152602081815260408083206001600160a01b038516808552925280832080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006117f3826118f7565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000906118a1906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611877573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189b919061227a565b84611ede565b90506107aa6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008361150d565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611977573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061199b919061227a565b90508181106119a8575050565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611a28573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4c919061227a565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024016020604051808303816000875af1158015611ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611af5919061227a565b611aff90836122c2565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663bb7b8b806040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b85919061227a565b90506000611b938383611ef6565b90506000611bb9611ba487896124da565b611bb39064e8d4a510006124ed565b83611ede565b90506000611bc78285611f0b565b9050600064e8d4a51000611bde8460636064611f1c565b611be8919061252a565b90506000611c0287611bfd8560656064611f1c565b611ede565b905087811115611cc8576001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663c32e7202611c458a846124da565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b1681526004810191909152600160248201526044016020604051808303816000875af1158015611ca2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cc691906122d5565b505b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811691631a4d01d2917f000000000000000000000000000000000000000000000000000000000000000016906370a0823190602401602060405180830381865afa158015611d6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d93919061227a565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b168152600481019190915260016024820152604481018590526064016020604051808303816000875af1158015611df7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1b919061227a565b5050505050505050505050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610acf57611e64816001600160a01b03166014611f3b565b611e6f836020611f3b565b604051602001611e80929190612589565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290527f08c379a00000000000000000000000000000000000000000000000000000000082526105f49160040161260a565b6000818310611eed5781611eef565b825b9392505050565b6000611eef8383670de0b6b3a7640000611f1c565b6000611eef83670de0b6b3a7640000845b828202811515841585830485141716611f3457600080fd5b0492915050565b60606000611f4a8360026124ed565b611f559060026122c2565b67ffffffffffffffff811115611f6d57611f6d6122f7565b6040519080825280601f01601f191660200182016040528015611f97576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110611fce57611fce612326565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061203157612031612326565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600061206d8460026124ed565b6120789060016122c2565b90505b6001811115612115577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106120b9576120b9612326565b1a60f81b8282815181106120cf576120cf612326565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c9361210e8161265b565b905061207b565b508315611eef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016105f4565b6001600160a01b038116811461071457600080fd5b6000602082840312156121a557600080fd5b8135611eef8161217e565b6000602082840312156121c257600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114611eef57600080fd5b60006020828403121561220457600080fd5b5035919050565b6000806040838503121561221e57600080fd5b8235915060208301356122308161217e565b809150509250929050565b6000806040838503121561224e57600080fd5b50508035926020909101359150565b60006020828403121561226f57600080fd5b8151611eef8161217e565b60006020828403121561228c57600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156107aa576107aa612293565b6000602082840312156122e757600080fd5b81518015158114611eef57600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156123a55784516001600160a01b031683529383019391830191600101612380565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156123d957600080fd5b825167ffffffffffffffff808211156123f157600080fd5b818501915085601f83011261240557600080fd5b815181811115612417576124176122f7565b8060051b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f8301168101818110858211171561245a5761245a6122f7565b60405291825284820192508381018501918883111561247857600080fd5b938501935b828510156124965784518452938501939285019261247d565b98975050505050505050565b60608101818460005b60028110156124ca5781518352602092830192909101906001016124ab565b5050508260408301529392505050565b818103818111156107aa576107aa612293565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561252557612525612293565b500290565b600082612560577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60005b83811015612580578181015183820152602001612568565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516125c1816017850160208801612565565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516125fe816028840160208801612565565b01602801949350505050565b6020815260008251806020840152612629816040850160208701612565565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60008161266a5761266a612293565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea2646970667358221220c493249680671b1528ee5351714e2bb3112fffe4e14fb771cc76d638a03932c164736f6c63430008100033";

type ConvexStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConvexStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ConvexStrategy__factory extends ContractFactory {
  constructor(...args: ConvexStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    _curvePool: PromiseOrValue<string>,
    _convexPid: PromiseOrValue<BigNumberish>,
    _convexBooster: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ConvexStrategy> {
    return super.deploy(
      _vault,
      _curvePool,
      _convexPid,
      _convexBooster,
      overrides || {}
    ) as Promise<ConvexStrategy>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    _curvePool: PromiseOrValue<string>,
    _convexPid: PromiseOrValue<BigNumberish>,
    _convexBooster: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _vault,
      _curvePool,
      _convexPid,
      _convexBooster,
      overrides || {}
    );
  }
  override attach(address: string): ConvexStrategy {
    return super.attach(address) as ConvexStrategy;
  }
  override connect(signer: Signer): ConvexStrategy__factory {
    return super.connect(signer) as ConvexStrategy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConvexStrategyInterface {
    return new utils.Interface(_abi) as ConvexStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConvexStrategy {
    return new Contract(address, _abi, signerOrProvider) as ConvexStrategy;
  }
}
