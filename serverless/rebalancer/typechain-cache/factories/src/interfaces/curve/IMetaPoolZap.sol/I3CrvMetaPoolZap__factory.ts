/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  I3CrvMetaPoolZap,
  I3CrvMetaPoolZapInterface,
} from "../../../../../src/interfaces/curve/IMetaPoolZap.sol/I3CrvMetaPoolZap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256[4]",
        name: "depositAmounts",
        type: "uint256[4]",
      },
      {
        internalType: "uint256",
        name: "minMintAmount",
        type: "uint256",
      },
    ],
    name: "add_liquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "index",
        type: "int128",
      },
    ],
    name: "calc_withdraw_one_coin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
      {
        internalType: "uint256[4]",
        name: "_amounts",
        type: "uint256[4]",
      },
      {
        internalType: "uint256",
        name: "_maxBurnAmount",
        type: "uint256",
      },
    ],
    name: "remove_liquidity_imbalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pool",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "burnAmount",
        type: "uint256",
      },
      {
        internalType: "int128",
        name: "index",
        type: "int128",
      },
      {
        internalType: "uint256",
        name: "minAmount",
        type: "uint256",
      },
    ],
    name: "remove_liquidity_one_coin",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class I3CrvMetaPoolZap__factory {
  static readonly abi = _abi;
  static createInterface(): I3CrvMetaPoolZapInterface {
    return new utils.Interface(_abi) as I3CrvMetaPoolZapInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): I3CrvMetaPoolZap {
    return new Contract(address, _abi, signerOrProvider) as I3CrvMetaPoolZap;
  }
}
