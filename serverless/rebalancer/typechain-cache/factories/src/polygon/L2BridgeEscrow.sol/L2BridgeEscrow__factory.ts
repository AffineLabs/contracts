/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  L2BridgeEscrow,
  L2BridgeEscrowInterface,
} from "../../../../src/polygon/L2BridgeEscrow.sol/L2BridgeEscrow";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract L2Vault",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
    ],
    name: "TransferToVault",
    type: "event",
  },
  {
    inputs: [],
    name: "asset",
    outputs: [
      {
        internalType: "contract ERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assets",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "exitProof",
        type: "bytes",
      },
    ],
    name: "clearFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "exitProof",
        type: "bytes",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract L2Vault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wormholeRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61010060405234801561001157600080fd5b50604051610a60380380610a60833981016040819052610030916101bc565b80806001600160a01b0316638c4554a86040518163ffffffff1660e01b8152600401602060405180830381865afa15801561006f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061009391906101bc565b6001600160a01b031660a0816001600160a01b031681525050806001600160a01b03166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156100ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061010e91906101bc565b6001600160a01b03166080816001600160a01b031681525050806001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015610165573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018991906101bc565b6001600160a01b0390811660c0529190911660e052506101e0565b6001600160a01b03811681146101b957600080fd5b50565b6000602082840312156101ce57600080fd5b81516101d9816101a4565b9392505050565b60805160a05160c05160e05161081161024f600039600081816101600152818161024e0152818161057001526105f701526000818160ff015261019a015260008181610126015261039001526000818160af0152818161030401528181610448015261054e01526108116000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635aa6e6751161005b5780635aa6e675146100fa5780638c4554a814610121578063f29874ac14610148578063fbfa77cf1461015b57600080fd5b80630f73cc4f146100825780632e1a7d4d1461009757806338d52e0f146100aa575b600080fd5b61009561009036600461072d565b610182565b005b6100956100a53660046107a9565b610236565b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b61009561015636600461072d565b610378565b6100d17f000000000000000000000000000000000000000000000000000000000000000081565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f42453a204f6e6c7920476f7665726e616e63650000000000000000000000000060448201526064015b60405180910390fd5b610231838383610417565b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016146102d5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f42453a204f6e6c79207661756c74000000000000000000000000000000000000604482015260640161021d565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610226576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601860248201527f42453a204f6e6c7920776f726d686f6c6520726f757465720000000000000000604482015260640161021d565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa1580156104a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c891906107c2565b905083811015610534576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f42453a2046756e6473206e6f7420726563656976656400000000000000000000604482015260640161021d565b61059573ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f00000000000000000000000000000000000000000000000000000000000000008361066e565b6040518181527fb6760579a8d570a6e3d00f8ce3e7ac735d0f138c120c1d01c9d9aa56b7312ab09060200160405180910390a16040517f949722cc000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063949722cc90602401600060405180830381600087803b15801561065057600080fd5b505af1158015610664573d6000803e3d6000fd5b5050505050505050565b60006040517fa9059cbb000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610727576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161021d565b50505050565b60008060006040848603121561074257600080fd5b83359250602084013567ffffffffffffffff8082111561076157600080fd5b818601915086601f83011261077557600080fd5b81358181111561078457600080fd5b87602082850101111561079657600080fd5b6020830194508093505050509250925092565b6000602082840312156107bb57600080fd5b5035919050565b6000602082840312156107d457600080fd5b505191905056fea2646970667358221220c24150aabf95be196f422b4939ad52d0c7509ab6d4a984fd40b3e7dddb31b92a64736f6c63430008100033";

type L2BridgeEscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2BridgeEscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2BridgeEscrow__factory extends ContractFactory {
  constructor(...args: L2BridgeEscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L2BridgeEscrow> {
    return super.deploy(_vault, overrides || {}) as Promise<L2BridgeEscrow>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, overrides || {});
  }
  override attach(address: string): L2BridgeEscrow {
    return super.attach(address) as L2BridgeEscrow;
  }
  override connect(signer: Signer): L2BridgeEscrow__factory {
    return super.connect(signer) as L2BridgeEscrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2BridgeEscrowInterface {
    return new utils.Interface(_abi) as L2BridgeEscrowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2BridgeEscrow {
    return new Contract(address, _abi, signerOrProvider) as L2BridgeEscrow;
  }
}
