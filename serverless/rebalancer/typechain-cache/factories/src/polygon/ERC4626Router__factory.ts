/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC4626Router,
  ERC4626RouterInterface,
} from "../../../src/polygon/ERC4626Router";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaxAmountError",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxSharesError",
    type: "error",
  },
  {
    inputs: [],
    name: "MinAmountError",
    type: "error",
  },
  {
    inputs: [],
    name: "MinSharesError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSharesOut",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "uint256",
        name: "sharesOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minSharesOut",
        type: "uint256",
      },
    ],
    name: "depositMax",
    outputs: [
      {
        internalType: "uint256",
        name: "sharesOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSharesOut",
        type: "uint256",
      },
    ],
    name: "depositToVault",
    outputs: [
      {
        internalType: "uint256",
        name: "sharesOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAmountIn",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
    ],
    name: "multicall",
    outputs: [
      {
        internalType: "bytes[]",
        name: "results",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "redeemMax",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "fromVault",
        type: "address",
      },
      {
        internalType: "contract IERC4626",
        name: "toVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "shares",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSharesOut",
        type: "uint256",
      },
    ],
    name: "redeemToDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "sharesOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versionRecipient",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "vault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSharesOut",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [
      {
        internalType: "uint256",
        name: "sharesOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC4626",
        name: "fromVault",
        type: "address",
      },
      {
        internalType: "contract IERC4626",
        name: "toVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSharesIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minSharesOut",
        type: "uint256",
      },
    ],
    name: "withdrawToDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "sharesOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200124b3803806200124b833981016040819052620000349162000051565b5062000126565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200006557600080fd5b82516001600160401b03808211156200007d57600080fd5b818501915085601f8301126200009257600080fd5b815181811115620000a757620000a76200003b565b604051601f8201601f19908116603f01168101908382118183101715620000d257620000d26200003b565b816040528281528886848701011115620000eb57600080fd5b600093505b828410156200010f5784840186015181850187015292850192620000f0565b600086848301015280965050505050505092915050565b61111580620001366000396000f3fe6080604052600436106100dd5760003560e01c8063a246bd301161007f578063b592e40611610059578063b592e40614610254578063e1f21c6714610267578063ed01c6e51461027c578063f943028c1461028f57600080fd5b8063a246bd301461020e578063ac9650d814610221578063b3f1c93d1461024157600080fd5b8063572b6c05116100bb578063572b6c05146101675780637bfe950c146101b35780637da0a877146101c657806390f328c9146101fb57600080fd5b806320e8c565146100e2578063486ff0cd146101085780634be4741814610154575b600080fd5b6100f56100f0366004610dd2565b6102a2565b6040519081526020015b60405180910390f35b34801561011457600080fd5b50604080518082018252600181527f3100000000000000000000000000000000000000000000000000000000000000602082015290516100ff9190610e7c565b6100f5610162366004610dd2565b610383565b34801561017357600080fd5b506101a3610182366004610e96565b60005473ffffffffffffffffffffffffffffffffffffffff91821691161490565b60405190151581526020016100ff565b6100f56101c1366004610dd2565b610484565b3480156101d257600080fd5b5060005460405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100ff565b6100f5610209366004610eb3565b610585565b6100f561021c366004610f0e565b6105ae565b61023461022f366004610f4f565b610738565b6040516100ff9190610fc4565b6100f561024f366004610dd2565b6107b7565b6100f5610262366004611044565b610890565b61027a610275366004610f0e565b6108ab565b005b6100f561028a366004610f0e565b6108d1565b6100f561029d366004610dd2565b610b55565b6040517f6e553f650000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff84811660248301526000918391871690636e553f65906044016020604051808303816000875af115801561031c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034091906110a9565b915081101561037b576040517fa267cc6000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b949350505050565b6000818573ffffffffffffffffffffffffffffffffffffffff1663ba08765285876103ac610bc4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff91821660248401521660448201526064016020604051808303816000875af1158015610425573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044991906110a9565b915081101561037b576040517f6e8c873b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000818573ffffffffffffffffffffffffffffffffffffffff1663b460af9485876104ad610bc4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e086901b168152600481019390935273ffffffffffffffffffffffffffffffffffffffff91821660248401521660448201526064016020604051808303816000875af1158015610526573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054a91906110a9565b915081111561037b576040517fac11961300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000806105958730866000610383565b90506105a3868683866102a2565b979650505050505050565b6000808473ffffffffffffffffffffffffffffffffffffffff166370a082316105d5610bc4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061066291906110a9565b905060008573ffffffffffffffffffffffffffffffffffffffff1663d905777e61068a610bc4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa1580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071791906110a9565b90506000828210610728578261072a565b815b90506105a387878388610383565b606081156107b15750604051818152602001600582901b808483378101805b825185018035602082018337600080823584305af461077a573d6000803e3d6000fd5b508083526020830192503d81523d6000602083013e3d01603f0167ffffffffffffffe0168183106107575760405192508060405250505b92915050565b6040517f94bf804d0000000000000000000000000000000000000000000000000000000081526004810183905273ffffffffffffffffffffffffffffffffffffffff848116602483015260009183918716906394bf804d906044016020604051808303816000875af1158015610831573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061085591906110a9565b915081111561037b576040517f4e3c485300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061089e87308686610484565b506105a3868686856102a2565b6108cc73ffffffffffffffffffffffffffffffffffffffff84168383610c23565b505050565b6000808473ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561091f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094391906110c2565b905060008173ffffffffffffffffffffffffffffffffffffffff166370a0823161096b610bc4565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401602060405180830381865afa1580156109d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109f891906110a9565b6040517f402d267d00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff878116600483015291925060009188169063402d267d90602401602060405180830381865afa158015610a6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8e91906110a9565b90506000828210610a9f5782610aa1565b815b9050610b3d610aae610bc4565b30838b73ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f91906110c2565b73ffffffffffffffffffffffffffffffffffffffff16929190610ce7565b610b49888883896102a2565b98975050505050505050565b6000610baf610b62610bc4565b30858873ffffffffffffffffffffffffffffffffffffffff166338d52e0f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610afb573d6000803e3d6000fd5b610bbb858585856102a2565b95945050505050565b600060143610801590610bee575060005473ffffffffffffffffffffffffffffffffffffffff1633145b15610c1e57507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec36013560601c90565b503390565b60006040517f095ea7b3000000000000000000000000000000000000000000000000000000008152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610ce1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064015b60405180910390fd5b50505050565b60006040517f23b872dd0000000000000000000000000000000000000000000000000000000081528460048201528360248201528260448201526020600060648360008a5af13d15601f3d1160016000511416171691505080610da6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610cd8565b5050505050565b73ffffffffffffffffffffffffffffffffffffffff81168114610dcf57600080fd5b50565b60008060008060808587031215610de857600080fd5b8435610df381610dad565b93506020850135610e0381610dad565b93969395505050506040820135916060013590565b6000815180845260005b81811015610e3e57602081850181015186830182015201610e22565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b602081526000610e8f6020830184610e18565b9392505050565b600060208284031215610ea857600080fd5b8135610e8f81610dad565b600080600080600060a08688031215610ecb57600080fd5b8535610ed681610dad565b94506020860135610ee681610dad565b93506040860135610ef681610dad565b94979396509394606081013594506080013592915050565b600080600060608486031215610f2357600080fd5b8335610f2e81610dad565b92506020840135610f3e81610dad565b929592945050506040919091013590565b60008060208385031215610f6257600080fd5b823567ffffffffffffffff80821115610f7a57600080fd5b818501915085601f830112610f8e57600080fd5b813581811115610f9d57600080fd5b8660208260051b8501011115610fb257600080fd5b60209290920196919550909350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611037577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452611025858351610e18565b94509285019290850190600101610feb565b5092979650505050505050565b60008060008060008060c0878903121561105d57600080fd5b863561106881610dad565b9550602087013561107881610dad565b9450604087013561108881610dad565b959894975094956060810135955060808101359460a0909101359350915050565b6000602082840312156110bb57600080fd5b5051919050565b6000602082840312156110d457600080fd5b8151610e8f81610dad56fea26469706673582212201ec21cf5d931f4bc30b0b4158b5d85444ae4affc51d002943437499aa22c2ff364736f6c63430008100033";

type ERC4626RouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC4626RouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC4626Router__factory extends ContractFactory {
  constructor(...args: ERC4626RouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC4626Router> {
    return super.deploy(name, overrides || {}) as Promise<ERC4626Router>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, overrides || {});
  }
  override attach(address: string): ERC4626Router {
    return super.attach(address) as ERC4626Router;
  }
  override connect(signer: Signer): ERC4626Router__factory {
    return super.connect(signer) as ERC4626Router__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC4626RouterInterface {
    return new utils.Interface(_abi) as ERC4626RouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC4626Router {
    return new Contract(address, _abi, signerOrProvider) as ERC4626Router;
  }
}
