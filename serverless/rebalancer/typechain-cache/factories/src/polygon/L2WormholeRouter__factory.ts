/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  L2WormholeRouter,
  L2WormholeRouterInterface,
} from "../../../src/polygon/L2WormholeRouter";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract L2Vault",
        name: "_vault",
        type: "address",
      },
      {
        internalType: "contract IWormhole",
        name: "_wormhole",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "consistencyLevel",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextValidNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "otherLayerWormholeId",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "receiveFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "message",
        type: "bytes",
      },
    ],
    name: "receiveTVL",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "reportFundTransfer",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "requestFunds",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_consistencyLevel",
        type: "uint8",
      },
    ],
    name: "setConsistencyLevel",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract BaseVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "wormhole",
    outputs: [
      {
        internalType: "contract IWormhole",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040526000805460ff60a01b1916600160a21b1790553480156200002457600080fd5b50604051620015583803806200155883398101604081905262000047916200010d565b8181816001600160a01b03166080816001600160a01b0316815250506080516001600160a01b0316635aa6e6756040518163ffffffff1660e01b8152600401602060405180830381865afa158015620000a4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000ca91906200014c565b600080546001600160a01b0319166001600160a01b039283161790551660a0525062000173915050565b6001600160a01b03811681146200010a57600080fd5b50565b600080604083850312156200012157600080fd5b82516200012e81620000f4565b60208401519092506200014181620000f4565b809150509250929050565b6000602082840312156200015f57600080fd5b81516200016c81620000f4565b9392505050565b60805160a051611387620001d16000396000818161017f015281816103fc015281816104aa01528181610564015261082a01526000818161026a015281816102f80152818161071201528181610a110152610aa401526113876000f3fe6080604052600436106100bc5760003560e01c8063ae850d3111610074578063dd5f8aad1161004e578063dd5f8aad146101f8578063e8dfd50814610214578063fbfa77cf1461025857600080fd5b8063ae850d31146101a1578063ba13feab146101c5578063bf3bd25d146101e557600080fd5b80636c5af8c7116100a55780636c5af8c71461013a578063747584441461014d57806384acd1bb1461016d57600080fd5b8063538ee295146100c15780635aa6e675146100e3575b600080fd5b3480156100cd57600080fd5b506100e16100dc366004610d50565b61028c565b005b3480156100ef57600080fd5b506000546101109073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100e1610148366004610d74565b6102e0565b34801561015957600080fd5b506100e1610168366004610d8d565b61055d565b34801561017957600080fd5b506101107f000000000000000000000000000000000000000000000000000000000000000081565b3480156101ad57600080fd5b506101b760015481565b604051908152602001610131565b3480156101d157600080fd5b506100e16101e0366004610d8d565b610823565b6100e16101f3366004610d74565b610a8c565b34801561020457600080fd5b5060405160028152602001610131565b34801561022057600080fd5b506000546102469074010000000000000000000000000000000000000000900460ff1681565b60405160ff9091168152602001610131565b34801561026457600080fd5b506101107f000000000000000000000000000000000000000000000000000000000000000081565b610294610b66565b6000805460ff90921674010000000000000000000000000000000000000000027fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff909216919091179055565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f57523a204f6e6c79207661756c7400000000000000000000000000000000000060448201526064015b60405180910390fd5b604080517f41e1bd8868090e46c482a7fbb97488f60e594d62bdce153a0798da6113a3890060208201529081018290526000906060015b60408051808303601f19018152908290527f4cf842b500000000000000000000000000000000000000000000000000000000825230600483015291506000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690634cf842b590602401602060405180830381865afa158015610458573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047c9190610e1c565b6000546040517fb19a437e0000000000000000000000000000000000000000000000000000000081529192507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169163b19a437e913491610514918691889174010000000000000000000000000000000000000000900460ff1690600401610e87565b60206040518083038185885af1158015610532573d6000803e3d6000fd5b50505050506040513d601f19601f820116820180604052508101906105579190610e1c565b50505050565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c0fd8bde86866040518363ffffffff1660e01b81526004016105bd929190610eb9565b600060405180830381865afa1580156105da573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610602919081019061110c565b925092509250818190610642576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b9190611264565b5061064c83610be9565b604083015161065c906001611277565b63ffffffff166001819055506000808460e0015180602001905181019061068391906112c2565b915091507fd46f53cc9a73b20946751f83c9ea3fa4a449cc9fd6bfb0130f5ae494e399da868214610710576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f57523a20626164206d7367207479706500000000000000000000000000000000604482015260640161037b565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166335dd5e956040518163ffffffff1660e01b8152600401602060405180830381865afa15801561077b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079f91906112e6565b73ffffffffffffffffffffffffffffffffffffffff1663f29874ac826040518263ffffffff1660e01b81526004016107e891815260406020820181905260009082015260600190565b600060405180830381600087803b15801561080257600080fd5b505af1158015610816573d6000803e3d6000fd5b5050505050505050505050565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663c0fd8bde86866040518363ffffffff1660e01b8152600401610883929190610eb9565b600060405180830381865afa1580156108a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108c8919081019061110c565b925092509250818190610908576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161037b9190611264565b5061091283610be9565b6040830151610922906001611277565b63ffffffff1660018190555060008060008560e0015180602001905181019061094b919061131c565b9250925092507f0ec4fbf776bb6953385447ec267acdb2866a2411ff552b4eb42d3e6f604190dc83146109da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f57523a20626164206d7367207479706500000000000000000000000000000000604482015260640161037b565b6040517f8377c8540000000000000000000000000000000000000000000000000000000081526004810183905281151560248201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690638377c85490604401600060405180830381600087803b158015610a6a57600080fd5b505af1158015610a7e573d6000803e3d6000fd5b505050505050505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610b2b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f57523a204f6e6c79207661756c74000000000000000000000000000000000000604482015260640161037b565b604080517f73c7c6b329d87423fc69778cd50751b239ec3aa52085be0151d2116c5ef552b560208201529081018290526000906060016103bb565b60005473ffffffffffffffffffffffffffffffffffffffff163314610be7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4f6e6c7920476f7665726e616e63652e00000000000000000000000000000000604482015260640161037b565b565b60808101513014610c56576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601760248201527f57523a2062616420656d69747465722061646472657373000000000000000000604482015260640161037b565b606081015161ffff16600214610cc8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f57523a2062616420656d697474657220636861696e0000000000000000000000604482015260640161037b565b600154816040015163ffffffff161015610d3e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f57523a206f6c64207472616e73616374696f6e00000000000000000000000000604482015260640161037b565b50565b60ff81168114610d3e57600080fd5b600060208284031215610d6257600080fd5b8135610d6d81610d41565b9392505050565b600060208284031215610d8657600080fd5b5035919050565b60008060208385031215610da057600080fd5b823567ffffffffffffffff80821115610db857600080fd5b818501915085601f830112610dcc57600080fd5b813581811115610ddb57600080fd5b866020828501011115610ded57600080fd5b60209290920196919550909350505050565b805167ffffffffffffffff81168114610e1757600080fd5b919050565b600060208284031215610e2e57600080fd5b610d6d82610dff565b60005b83811015610e52578181015183820152602001610e3a565b50506000910152565b60008151808452610e73816020860160208601610e37565b601f01601f19169290920160200192915050565b63ffffffff84168152606060208201526000610ea66060830185610e5b565b905060ff83166040830152949350505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516080810167ffffffffffffffff81118282101715610f3a57610f3a610ee8565b60405290565b604051610160810167ffffffffffffffff81118282101715610f3a57610f3a610ee8565b604051601f8201601f1916810167ffffffffffffffff81118282101715610f8d57610f8d610ee8565b604052919050565b8051610e1781610d41565b805163ffffffff81168114610e1757600080fd5b805161ffff81168114610e1757600080fd5b600082601f830112610fd757600080fd5b815167ffffffffffffffff811115610ff157610ff1610ee8565b6110046020601f19601f84011601610f64565b81815284602083860101111561101957600080fd5b61102a826020830160208701610e37565b949350505050565b600082601f83011261104357600080fd5b8151602067ffffffffffffffff82111561105f5761105f610ee8565b61106d818360051b01610f64565b82815260079290921b8401810191818101908684111561108c57600080fd5b8286015b848110156110f157608081890312156110a95760008081fd5b6110b1610f17565b8151815284820151858201526040808301516110cc81610d41565b908201526060828101516110df81610d41565b90820152835291830191608001611090565b509695505050505050565b80518015158114610e1757600080fd5b60008060006060848603121561112157600080fd5b835167ffffffffffffffff8082111561113957600080fd5b90850190610160828803121561114e57600080fd5b611156610f40565b61115f83610f95565b815261116d60208401610fa0565b602082015261117e60408401610fa0565b604082015261118f60608401610fb4565b6060820152608083015160808201526111aa60a08401610dff565b60a08201526111bb60c08401610f95565b60c082015260e0830151828111156111d257600080fd5b6111de89828601610fc6565b60e0830152506101006111f2818501610fa0565b90820152610120838101518381111561120a57600080fd5b6112168a828701611032565b918301919091525061014083810151908201529450611237602087016110fc565b9350604086015191508082111561124d57600080fd5b5061125a86828701610fc6565b9150509250925092565b602081526000610d6d6020830184610e5b565b63ffffffff8181168382160190808211156112bb577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5092915050565b600080604083850312156112d557600080fd5b505080516020909101519092909150565b6000602082840312156112f857600080fd5b815173ffffffffffffffffffffffffffffffffffffffff81168114610d6d57600080fd5b60008060006060848603121561133157600080fd5b8351925060208401519150611348604085016110fc565b9050925092509256fea2646970667358221220afa11a976e638d02128bb69883db5bd0109b8a0c67404896c7d173f3111a9ef064736f6c63430008100033";

type L2WormholeRouterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: L2WormholeRouterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class L2WormholeRouter__factory extends ContractFactory {
  constructor(...args: L2WormholeRouterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _vault: PromiseOrValue<string>,
    _wormhole: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<L2WormholeRouter> {
    return super.deploy(
      _vault,
      _wormhole,
      overrides || {}
    ) as Promise<L2WormholeRouter>;
  }
  override getDeployTransaction(
    _vault: PromiseOrValue<string>,
    _wormhole: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_vault, _wormhole, overrides || {});
  }
  override attach(address: string): L2WormholeRouter {
    return super.attach(address) as L2WormholeRouter;
  }
  override connect(signer: Signer): L2WormholeRouter__factory {
    return super.connect(signer) as L2WormholeRouter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): L2WormholeRouterInterface {
    return new utils.Interface(_abi) as L2WormholeRouterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): L2WormholeRouter {
    return new Contract(address, _abi, signerOrProvider) as L2WormholeRouter;
  }
}
