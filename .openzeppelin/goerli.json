{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1599eC74d2A29adf6c9da80e6da3a3600b829783",
      "txHash": "0xa264cd8d60971bedbee9656a601c612b66cae1238cffd4dbde7d4da23ebc14ec",
      "kind": "uups"
    },
    {
      "address": "0x1706053D96e5562334C40C01DD70ef6Ebc91bFA0",
      "txHash": "0x7beb52f11bd4ac8b6aa68df5997c5ddd423333a5c99c85b1492bd85087969f34",
      "kind": "uups"
    },
    {
      "address": "0x57e42307bF619873B49be9C3CdA9f5e2bF52193f",
      "txHash": "0x301deec16b862a30f5f5b11678adcc4f887cda21ce62a0b6c24766a11db99eef",
      "kind": "uups"
    },
    {
      "address": "0xB45F1ADf53209B377Ff5d7530e9cD74cf86829b5",
      "txHash": "0xd67432a9ccf0a405df5bdb065e1b184f31ffc6bb7d14f2900f2e6c9dab190d54",
      "kind": "uups"
    }
  ],
  "impls": {
    "df97723a90565c4f9d5e181324b50e09e7845b071c5836a39fabfea0cc93dffe": {
      "address": "0x75F47853F41575408066F6572b589759468a2f2E",
      "txHash": "0x15708a5640385b5f77dd6e8c89678a73d86bcb5e49fb723a25d4df08a4a66969",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "AccessControl",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1767_storage)",
            "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
          },
          {
            "contract": "BaseVault",
            "label": "token",
            "type": "t_contract(ERC20)4330",
            "src": "src\\BaseVault.sol:21"
          },
          {
            "contract": "BaseVault",
            "label": "governance",
            "type": "t_address",
            "src": "src\\BaseVault.sol:23"
          },
          {
            "contract": "BaseVault",
            "label": "wormhole",
            "type": "t_contract(IWormhole)9901",
            "src": "src\\BaseVault.sol:30"
          },
          {
            "contract": "BaseVault",
            "label": "staging",
            "type": "t_address",
            "src": "src\\BaseVault.sol:31"
          },
          {
            "contract": "BaseVault",
            "label": "withdrawalStack",
            "type": "t_array(t_contract(BaseStrategy)5301)dyn_storage",
            "src": "src\\BaseVault.sol:47"
          },
          {
            "contract": "BaseVault",
            "label": "strategies",
            "type": "t_mapping(t_contract(BaseStrategy)5301,t_struct(StrategyInfo)5691_storage)",
            "src": "src\\BaseVault.sol:220"
          },
          {
            "contract": "BaseVault",
            "label": "debtRatio",
            "type": "t_uint256",
            "src": "src\\BaseVault.sol:242"
          },
          {
            "contract": "BaseVault",
            "label": "totalDebt",
            "type": "t_uint256",
            "src": "src\\BaseVault.sol:244"
          },
          {
            "contract": "BaseVault",
            "label": "lastReport",
            "type": "t_uint256",
            "src": "src\\BaseVault.sol:247"
          },
          {
            "contract": "BaseVault",
            "label": "maxLockedProfit",
            "type": "t_uint256",
            "src": "src\\BaseVault.sol:251"
          },
          {
            "contract": "L1Vault",
            "label": "received",
            "type": "t_bool",
            "src": "src\\ethereum\\L1Vault.sol:18"
          },
          {
            "contract": "L1Vault",
            "label": "chainManager",
            "type": "t_contract(IRootChainManager)9717",
            "src": "src\\ethereum\\L1Vault.sol:19"
          },
          {
            "contract": "L1Vault",
            "label": "predicate",
            "type": "t_address",
            "src": "src\\ethereum\\L1Vault.sol:23"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IRootChainManager)9717": {
            "label": "contract IRootChainManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ERC20)4330": {
            "label": "contract ERC20"
          },
          "t_contract(IWormhole)9901": {
            "label": "contract IWormhole"
          },
          "t_array(t_contract(BaseStrategy)5301)dyn_storage": {
            "label": "contract BaseStrategy[]"
          },
          "t_contract(BaseStrategy)5301": {
            "label": "contract BaseStrategy"
          },
          "t_mapping(t_contract(BaseStrategy)5301,t_struct(StrategyInfo)5691_storage)": {
            "label": "mapping(contract BaseStrategy => struct BaseVault.StrategyInfo)"
          },
          "t_struct(StrategyInfo)5691_storage": {
            "label": "struct BaseVault.StrategyInfo",
            "members": [
              {
                "label": "activation",
                "type": "t_uint256"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256"
              },
              {
                "label": "minDebtPerHarvest",
                "type": "t_uint256"
              },
              {
                "label": "maxDebtPerHarvest",
                "type": "t_uint256"
              },
              {
                "label": "lastReport",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "totalGain",
                "type": "t_uint256"
              },
              {
                "label": "totalLoss",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1767_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)1767_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ba10dd624ae030e1eda8f622e4a0b2783b94963448744b4bd13e48cde31e7066": {
      "address": "0x8774FA55b990ceBA83acC7def692837EEBEB3C98",
      "txHash": "0x5bab34744df8cb59f8918c963a3c22055440e5e0f951a095e173439d3ef40991",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ERC1967UpgradeUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\ERC1967\\ERC1967UpgradeUpgradeable.sol:215"
          },
          {
            "contract": "UUPSUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\UUPSUpgradeable.sol:81"
          },
          {
            "contract": "AccessControl",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)1767_storage)",
            "src": "@openzeppelin\\contracts\\access\\AccessControl.sol:55"
          },
          {
            "contract": "BaseVault",
            "label": "token",
            "type": "t_contract(ERC20)4330",
            "src": "src\\BaseVault.sol:21"
          },
          {
            "contract": "BaseVault",
            "label": "governance",
            "type": "t_address",
            "src": "src\\BaseVault.sol:23"
          },
          {
            "contract": "BaseVault",
            "label": "wormhole",
            "type": "t_contract(IWormhole)9901",
            "src": "src\\BaseVault.sol:30"
          },
          {
            "contract": "BaseVault",
            "label": "staging",
            "type": "t_address",
            "src": "src\\BaseVault.sol:31"
          },
          {
            "contract": "BaseVault",
            "label": "withdrawalStack",
            "type": "t_array(t_contract(BaseStrategy)5301)dyn_storage",
            "src": "src\\BaseVault.sol:47"
          },
          {
            "contract": "BaseVault",
            "label": "strategies",
            "type": "t_mapping(t_contract(BaseStrategy)5301,t_struct(StrategyInfo)5691_storage)",
            "src": "src\\BaseVault.sol:220"
          },
          {
            "contract": "BaseVault",
            "label": "debtRatio",
            "type": "t_uint256",
            "src": "src\\BaseVault.sol:242"
          },
          {
            "contract": "BaseVault",
            "label": "totalDebt",
            "type": "t_uint256",
            "src": "src\\BaseVault.sol:244"
          },
          {
            "contract": "BaseVault",
            "label": "lastReport",
            "type": "t_uint256",
            "src": "src\\BaseVault.sol:247"
          },
          {
            "contract": "BaseVault",
            "label": "maxLockedProfit",
            "type": "t_uint256",
            "src": "src\\BaseVault.sol:251"
          },
          {
            "contract": "L1Vault",
            "label": "received",
            "type": "t_bool",
            "src": "src\\ethereum\\L1Vault.sol:18"
          },
          {
            "contract": "L1Vault",
            "label": "chainManager",
            "type": "t_contract(IRootChainManager)9717",
            "src": "src\\ethereum\\L1Vault.sol:19"
          },
          {
            "contract": "L1Vault",
            "label": "predicate",
            "type": "t_address",
            "src": "src\\ethereum\\L1Vault.sol:23"
          }
        ],
        "types": {
          "t_bool": {
            "label": "bool"
          },
          "t_contract(IRootChainManager)9717": {
            "label": "contract IRootChainManager"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ERC20)4330": {
            "label": "contract ERC20"
          },
          "t_contract(IWormhole)9901": {
            "label": "contract IWormhole"
          },
          "t_array(t_contract(BaseStrategy)5301)dyn_storage": {
            "label": "contract BaseStrategy[]"
          },
          "t_contract(BaseStrategy)5301": {
            "label": "contract BaseStrategy"
          },
          "t_mapping(t_contract(BaseStrategy)5301,t_struct(StrategyInfo)5691_storage)": {
            "label": "mapping(contract BaseStrategy => struct BaseVault.StrategyInfo)"
          },
          "t_struct(StrategyInfo)5691_storage": {
            "label": "struct BaseVault.StrategyInfo",
            "members": [
              {
                "label": "activation",
                "type": "t_uint256"
              },
              {
                "label": "debtRatio",
                "type": "t_uint256"
              },
              {
                "label": "minDebtPerHarvest",
                "type": "t_uint256"
              },
              {
                "label": "maxDebtPerHarvest",
                "type": "t_uint256"
              },
              {
                "label": "lastReport",
                "type": "t_uint256"
              },
              {
                "label": "totalDebt",
                "type": "t_uint256"
              },
              {
                "label": "totalGain",
                "type": "t_uint256"
              },
              {
                "label": "totalLoss",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)1767_storage)": {
            "label": "mapping(bytes32 => struct AccessControl.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)1767_storage": {
            "label": "struct AccessControl.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
